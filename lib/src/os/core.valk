
header "sys" as sys

exit_fn exit(code: int) {
    sys:exit(code @as i32)
}
exit_fn panic(msg: String) {
    println("PANIC: " + msg)
    sys:exit(1)
}

fn signal(sig: int, handler: fn(i32)()) void {
    sys:signal(sig @as i32, handler)
}

fn signal_ignore(sig: int) void {
    sys:signal(sig @as i32, null)
}

fn raise(sig: int) void {
    sys:raise(sig @as i32)
}

fn libc_errno() i32 {
    #if OS == win
    let i : i32 = 0
    sys:_get_errno(@ptr_of(i))
    return i
    #else
    return sys:errno
    #end
}

fn socket_errno() i32 {
    #if OS == win
    // Windows error
    return WSA_error()
    #else
    // Linux / macos error
    return libc_errno()
    #end
}
